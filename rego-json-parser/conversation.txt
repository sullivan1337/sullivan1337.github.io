user: [Use OPA's rego policy language

Rego Rule building blocks:
1. Each rule must start with `package wiz`
2. `result` = mandatory variable that controls the status of the rule
3. `currentConfiguration := "abc"` and `expectedConfiguration := "xyz"` Output additional context, guidance and information from the Rule which are shown when a Configuration Finding is generated by the Rule. This can use the Rule's variables or plain text.
4. Rather than `compliant` and `noncompliant` status, make the result return `pass` or `fail`
5. The following is an example of a good working rego rule: 
```
package wiz

default result = "pass"

allowed_cidr := "172.31.0.0/16"

is_not_allowed_cidr(rule) {
    some i
    rule.IpRanges[i].CidrIp != allowed_cidr
}

result = "fail" {
    rule := input.IpPermissions[_]
    rule.IpProtocol == "tcp"
    rule.FromPort == 22
    rule.ToPort == 22
    is_not_allowed_cidr(rule)
}

currentConfiguration := "Security Group allows port 22 inbound from CIDR ranges other than 172.31.0.0/16"
expectedConfiguration := "Security Group should only allow port 22 inbound from CIDR range 172.31.0.0/16"
```
]

assistant: [Sounds great, noted!]
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Foundation Stack for Org Chart Application.
  This stack creates a DynamoDB table for org chart data, a Secrets Manager secret for LinkedIn OAuth credentials, and an IAM Role for Lambda.
Parameters:
  LinkedInClientId:
    Description: "LinkedIn OAuth Client ID"
    Type: String
  LinkedInClientSecret:
    Description: "LinkedIn OAuth Client Secret"
    Type: String
    NoEcho: true
  CodeBucketName:
    Description: "Name of the S3 bucket containing Lambda and frontend code"
    Type: String
Resources:
  OrgChartTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: OrgChartData
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: UserId
          AttributeType: S
        - AttributeName: NodeId
          AttributeType: S
      KeySchema:
        - AttributeName: UserId
          KeyType: HASH
        - AttributeName: NodeId
          KeyType: RANGE
  LinkedInSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: OrgChart-LinkedInOAuth
      Description: "LinkedIn OAuth Client credentials"
      SecretString: !Sub |
        {"client_id": "${LinkedInClientId}", "client_secret": "${LinkedInClientSecret}"}
  OrgChartLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: OrgChartLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: OrgChartDynamoPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:Query
                Resource: !GetAtt OrgChartTable.Arn
        - PolicyName: OrgChartSecretsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: !Ref LinkedInSecret
Outputs:
  DynamoTableName:
    Description: "DynamoDB Table name for Org Chart Data"
    Value: !Ref OrgChartTable
    Export:
      Name: OrgChart-DynamoTableName
  LinkedInSecretArn:
    Description: "Secrets Manager ARN for LinkedIn OAuth credentials"
    Value: !Ref LinkedInSecret
    Export:
      Name: OrgChart-LinkedInSecretArn
  LambdaRoleArn:
    Description: "IAM Role ARN for Lambda function"
    Value: !GetAtt OrgChartLambdaRole.Arn
    Export:
      Name: OrgChart-LambdaRoleArn
  OrgChartBucketName:
    Description: "S3 Bucket Name for Lambda and frontend code"
    Value: !Ref CodeBucketName
    Export:
      Name: OrgChartBucketName
